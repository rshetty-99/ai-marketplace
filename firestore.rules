rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles[role] == true;
    }
    
    function isSameOrganization(orgId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }
    
    function hasPermission(permission) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             permission in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if hasPermission('user_management') || 
                     (hasPermission('manage_team') && isSameOrganization(resource.data.organizationId));
      allow write: if hasPermission('user_management') || 
                      (hasPermission('manage_team') && isSameOrganization(resource.data.organizationId));
    }

    // Organizations collection
    match /organizations/{orgId} {
      allow read: if isSameOrganization(orgId) || hasPermission('platform_admin');
      allow write: if hasPermission('manage_organization') && isSameOrganization(orgId);
      allow create: if isAuthenticated();
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isSameOrganization(resource.data.organizationId) || 
                     hasPermission('platform_admin') ||
                     hasPermission('view_project');
      allow write: if hasPermission('edit_project') && isSameOrganization(resource.data.organizationId);
      allow create: if hasPermission('create_project') && isAuthenticated();
      allow delete: if hasPermission('delete_project') && isSameOrganization(resource.data.organizationId);
    }

    // Categories collection (public read)
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if hasPermission('platform_admin');
    }

    // Skills collection (public read)
    match /skills/{skillId} {
      allow read: if true;
      allow write: if hasPermission('platform_admin');
    }

    // Freelancer profiles
    match /freelancers/{freelancerId} {
      allow read: if true; // Public profiles
      allow write: if isOwner(freelancerId);
      allow create: if isAuthenticated();
    }

    // Reviews and ratings
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if isOwner(resource.data.reviewerId) && isAuthenticated();
      allow create: if isAuthenticated();
    }

    // Messages (private communications)
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && 
                            request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && 
                              request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if hasPermission('platform_admin') || isAuthenticated();
    }

    // Analytics (restricted)
    match /analytics/{analyticsId} {
      allow read: if hasPermission('view_analytics') || hasPermission('platform_admin');
      allow write: if hasPermission('platform_admin');
    }

    // Audit logs (admin only)
    match /audit_logs/{logId} {
      allow read: if hasPermission('platform_admin');
      allow write: if false; // System generated only
    }

    // Payment records
    match /payments/{paymentId} {
      allow read: if isOwner(resource.data.payerId) || 
                     isOwner(resource.data.payeeId) ||
                     hasPermission('manage_billing');
      allow write: if hasPermission('manage_billing') || hasPermission('platform_admin');
    }

    // Escrow transactions
    match /escrow/{escrowId} {
      allow read: if isOwner(resource.data.clientId) || 
                     isOwner(resource.data.freelancerId) ||
                     hasPermission('platform_admin');
      allow write: if hasPermission('platform_admin');
    }
  }
}